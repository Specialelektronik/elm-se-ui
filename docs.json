[{"name":"SE.UI.Breadcrumb","comment":" Bulmas breadcrumb tags\nsee <https://bulma.io/documentation/components/breadcrumb/>\n\n\n# Parent\n\n@docs breadcrumb\n\n\n# Links\n\n@docs link, activeLink\n\n","unions":[],"aliases":[],"values":[{"name":"activeLink","comment":" Creates an active link. It takes the url as the first parameter and the a list of html content as the second.\n","type":"String.String -> List.List (Html.Styled.Html msg) -> SE.UI.Breadcrumb.Link msg"},{"name":"breadcrumb","comment":" This function takes a list of Link tags (created via the link function or activeLink function). We only support the / separator, left alignment and normal size.\n","type":"List.List (SE.UI.Breadcrumb.Link msg) -> Html.Styled.Html msg"},{"name":"link","comment":" Creates a non-active link. It takes the url as the first parameter and the a list of html content as the second.\n","type":"String.String -> List.List (Html.Styled.Html msg) -> SE.UI.Breadcrumb.Link msg"}],"binops":[]},{"name":"SE.UI.Buttons","comment":" Buttons from Bulma with some small design adjustments. Supports all colors and the `buttons` container.\n\nsee <https://bulma.io/documentation/elements/button/>\n\n\n# Grouping\n\n@docs buttons, ButtonsModifier\n\n\n# Buttons\n\n@docs button, staticButton, Modifier\n\n\n# Styles\n\n@docs buttonStyles\n\n","unions":[{"name":"ButtonsModifier","comment":" Modifiers for the buttons container.\n","args":[],"cases":[["Attached",[]],["Centered",[]],["Right",[]]]},{"name":"Modifier","comment":" Modify the button, support all modifiers in Bulma except the Disabled. To disable a button, use `Nothing` as the Maybe msg.\n","args":[],"cases":[["Color",["SE.UI.Colors.Color"]],["Text",[]],["Size",["SE.UI.Control.Size"]],["Fullwidth",[]],["Loading",[]]]}],"aliases":[],"values":[{"name":"button","comment":" A reusable button which has some styles pre-applied to it.\nIf onPress is Nothing, then the button will show as disabled\n","type":"List.List SE.UI.Buttons.Modifier -> Maybe.Maybe msg -> List.List (Html.Styled.Html msg) -> Html.Styled.Html msg"},{"name":"buttonStyles","comment":" Use this if you need a custom button with our styling\n","type":"List.List SE.UI.Buttons.Modifier -> SE.UI.Buttons.HasIcon -> List.List Css.Style"},{"name":"buttons","comment":" A \"List of buttons\" container.\nsee <https://bulma.io/documentation/elements/button/#list-of-buttons>\n","type":"List.List SE.UI.Buttons.ButtonsModifier -> List.List (Html.Styled.Html msg) -> Html.Styled.Html msg"},{"name":"staticButton","comment":" Static button without onclick message\n","type":"List.List SE.UI.Buttons.Modifier -> String.String -> Html.Styled.Html msg"}],"binops":[]},{"name":"SE.UI.Card","comment":" Bulmas card component\nsee <https://bulma.io/documentation/components/card/>\n\nThe card component originates from Bulmas equivalent without the footer and image header. We also have a sub title available.\n\nLike the [Input](SE.UI.Form.Input) components, Card uses the withStar-pattern.\n\n    Card.content\n        [ Content.content []\n            [ Html.p []\n                [ Html.text \"This is where the content goes. It can be any content you like.\"\n                ]\n            ]\n        ]\n        |> Card.withTitle \"This is a title\"\n        |> Card.withSubTitle \"This is a subtitle\"\n        |> Card.withBoxShadow\n        |> Card.toHtml\n\n\n# Definition\n\n@docs content, withTitle, withSubTitle, withBoxShadow, toHtml\n\n","unions":[],"aliases":[],"values":[{"name":"content","comment":" Create a Card with the provided Html.\n","type":"List.List (Html.Styled.Html msg) -> SE.UI.Card.Card msg"},{"name":"toHtml","comment":" Turn the Card into Html\n\nUse it in the end of a pipeline, see the example at the top.\n\n","type":"SE.UI.Card.Card msg -> Html.Styled.Html msg"},{"name":"withBoxShadow","comment":" Add box-shadow to the card\n","type":"SE.UI.Card.Card msg -> SE.UI.Card.Card msg"},{"name":"withSubTitle","comment":" Add a subtitle to the card, note that a title also needs to be present in order for the card to display the subtitle.\n","type":"String.String -> SE.UI.Card.Card msg -> SE.UI.Card.Card msg"},{"name":"withTitle","comment":" Add a title to the card\n","type":"String.String -> SE.UI.Card.Card msg -> SE.UI.Card.Card msg"}],"binops":[]},{"name":"SE.UI.Colors","comment":" The colors we use. Some color names are from Bulma but not all of them.\n\nWe use a custom type and the HSLA Scale (Hue, saturation, lightness, alpha) since Elm Css does not properly support working with colors like we want to do.\n\n    Colors.primary |> Colors.toCss == Css.Color { alpha = 1, blue = 0, color = Compatible, green = 0, red = 0, value = \"hsla(138, 100%, 31%, 1)\" }\n\n    Colors.primary |> Colors.hover |> Colors.toCss == Css.Color 0 158 47 1\n\n<https://bulma.io/documentation/overview/colors/>\n\n@docs Color, toHsla, Hsla, toCss, mapHue, mapSaturation, mapLightness, mapAlpha\n\n\n# Greys\n\n@docs white, lightest, lighter, light, base, dark, darker, darkest, black\n\n\n# Colors\n\n@docs primary, link, buy, danger, bargain, darkGreen, lightBlue\n\n\n# Derived colors\n\n@docs border, background, text\n\n\n# Modifiers\n\n@docs hover, active, invert\n\n\n# Css utilities\n\n@docs color, backgroundColor, borderColor\n\n","unions":[{"name":"Color","comment":" The defined colors we use. This type is just a way for other components to specify color as a Modifier.\n","args":[],"cases":[["White",[]],["Lightest",[]],["Lighter",[]],["Light",[]],["Base",[]],["Dark",[]],["Darker",[]],["Darkest",[]],["Black",[]],["Primary",[]],["Link",[]],["Buy",[]],["Danger",[]],["Bargain",[]],["DarkGreen",[]],["LightBlue",[]]]},{"name":"Hsla","comment":" Colors are represented as HSLA value <https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#HSL_colors>\n","args":[],"cases":[]}],"aliases":[],"values":[{"name":"active","comment":" Make the provided color a bit darker (it reduces lightness with 20%)\n","type":"SE.UI.Colors.Hsla -> SE.UI.Colors.Hsla"},{"name":"background","comment":" Alias for lightest.\n","type":"SE.UI.Colors.Hsla"},{"name":"backgroundColor","comment":" Css property backgroundColor but takes our Hsla value instead of regular Elm css color values\n","type":"SE.UI.Colors.Hsla -> Css.Style"},{"name":"bargain","comment":" #ff69b4 Hot pink\n","type":"SE.UI.Colors.Hsla"},{"name":"base","comment":" #8f9295\n","type":"SE.UI.Colors.Hsla"},{"name":"black","comment":" #000000\n","type":"SE.UI.Colors.Hsla"},{"name":"border","comment":" Alias for light.\n","type":"SE.UI.Colors.Hsla"},{"name":"borderColor","comment":" Css property borderColor but takes our Hsla value instead of regular Elm css color values\n","type":"SE.UI.Colors.Hsla -> Css.Style"},{"name":"buy","comment":" #daa52f Orange\n","type":"SE.UI.Colors.Hsla"},{"name":"color","comment":" Css property oclor but takes our Hsla value instead of regular Elm css color values\n","type":"SE.UI.Colors.Hsla -> Css.Style"},{"name":"danger","comment":" #CC4B4B Red\n","type":"SE.UI.Colors.Hsla"},{"name":"dark","comment":" #45494e\n","type":"SE.UI.Colors.Hsla"},{"name":"darkGreen","comment":" Dark green #0a373e\n","type":"SE.UI.Colors.Hsla"},{"name":"darker","comment":" #292c2f\n","type":"SE.UI.Colors.Hsla"},{"name":"darkest","comment":" #0e0f10\n","type":"SE.UI.Colors.Hsla"},{"name":"hover","comment":" Make the provided color a bit darker (it reduces lightness with 10%)\n","type":"SE.UI.Colors.Hsla -> SE.UI.Colors.Hsla"},{"name":"invert","comment":" Invert the color to either black or white\n\n    [ SE.UI.Colors.backgroundColor SE.UI.Colors.danger\n    , SE.UI.Colors.color (SE.UI.Colors.danger |> SE.UI.Colors.invert)\n    ]\n\n","type":"SE.UI.Colors.Hsla -> SE.UI.Colors.Hsla"},{"name":"light","comment":" #c7c8cA\n","type":"SE.UI.Colors.Hsla"},{"name":"lightBlue","comment":" #f8f9fB Light blue-grey\n","type":"SE.UI.Colors.Hsla"},{"name":"lighter","comment":" #e5e6e6\n","type":"SE.UI.Colors.Hsla"},{"name":"lightest","comment":" #f4f4f4\n","type":"SE.UI.Colors.Hsla"},{"name":"link","comment":" #1a6bd4 Blue\n","type":"SE.UI.Colors.Hsla"},{"name":"mapAlpha","comment":" Change alpha of the color\n","type":"(Basics.Float -> Basics.Float) -> SE.UI.Colors.Hsla -> SE.UI.Colors.Hsla"},{"name":"mapHue","comment":" Change hue of the color\n","type":"(Basics.Int -> Basics.Int) -> SE.UI.Colors.Hsla -> SE.UI.Colors.Hsla"},{"name":"mapLightness","comment":" Change lightness of the color\n","type":"(Basics.Float -> Basics.Float) -> SE.UI.Colors.Hsla -> SE.UI.Colors.Hsla"},{"name":"mapSaturation","comment":" Change saturation of the color\n","type":"(Basics.Float -> Basics.Float) -> SE.UI.Colors.Hsla -> SE.UI.Colors.Hsla"},{"name":"primary","comment":" #009e2f Green\n","type":"SE.UI.Colors.Hsla"},{"name":"text","comment":" Alias for darkest.\n","type":"SE.UI.Colors.Hsla"},{"name":"toCss","comment":" Transform our custom color to a color that Elm Css understands\n","type":"SE.UI.Colors.Hsla -> Css.Color"},{"name":"toHsla","comment":" Convert the Color type to a value we can use\n","type":"SE.UI.Colors.Color -> SE.UI.Colors.Hsla"},{"name":"white","comment":" white #ffffff\n","type":"SE.UI.Colors.Hsla"}],"binops":[]},{"name":"SE.UI.Columns","comment":" Bulmas Columns\nsee <https://bulma.io/documentation/columns/>\n\n\n# Basics\n\nToo a large extend, these functions works very similar a Bulmas own version. Each container modifier is its own function. The `.is-mobile` modifier isn't needed since the `Sizes` type contains a mobile option. Instead of variable gap, we have 3 different gap widths, small (0.5 rem), normal (0.75 rem) and wide (1 rem).\n\n@docs columns, multilineColumns, gaplessColumns, smallColumns, gaplessMultilineColumns, smallMultilineColumns, wideColumns, wideMultilineColumns\n\n\n# Column\n\nThere are 2 different column functions. `defaultColumn` is the standard, no options alternative, if you just want the plain .column class.\n\n@docs defaultColumn, column\n\n\n# Sizes\n\nThe `column` function takes a `Sizes` parameter, a List (Device, Width)\n\n@docs Sizes, Device, Width\n\n\n# Unsupported features\n\n  - .is-vcentered\n  - .is-centered\n  - .is-variable and .is-2-mobile etc.\n\n","unions":[{"name":"Device","comment":" The devices we support. `All` sets the width without a mediaquery.\n","args":[],"cases":[["All",[]],["Mobile",[]],["Tablet",[]],["Desktop",[]],["Widescreen",[]],["FullHD",[]]]},{"name":"Width","comment":" A lot of the width modifiers for `column` is supported.\n","args":[],"cases":[["Auto",[]],["Narrow",[]],["OneSixth",[]],["OneFifth",[]],["OneQuarter",[]],["OneThird",[]],["TwoFifths",[]],["Half",[]],["ThreeFifths",[]],["TwoThirds",[]],["ThreeQuarters",[]],["FourFifths",[]],["FiveSixths",[]],["Full",[]]]}],"aliases":[{"name":"Sizes","comment":" Combine different `Width` options with a `Device` like this:\n\n    [ ( All, OneThird )\n    , ( Mobile, Half )\n    ]\n        == \".is-one-third .is-half-mobile\"\n\n","args":[],"type":"List.List ( SE.UI.Columns.Device, SE.UI.Columns.Width )"}],"values":[{"name":"column","comment":" `.column` with Sizes options\n\n    columns\n        [ defaultColumn [ text \"Default column\" ]\n        , column\n            [ ( All, Half )\n            , ( Mobile, OneThird )\n            ]\n            [ text \"Half width column that shrinks to one third on a mobile device\" ]\n        ]\n        == \"<div class='columns is-mobile'>\\n            <div class='column'>Default column</div>\\n            <div class='column is-half is-one-third-mobile'>Half width column that shrinks to one third on a mobile device</div>\\n        </div>\"\n\n","type":"SE.UI.Columns.Sizes -> List.List (Html.Styled.Html msg) -> SE.UI.Columns.Column msg"},{"name":"columns","comment":" Standard `div.columns`, normal gap, no multiline\n","type":"List.List (SE.UI.Columns.Column msg) -> Html.Styled.Html msg"},{"name":"defaultColumn","comment":" Standard no-frills `.column`\n","type":"List.List (Html.Styled.Html msg) -> SE.UI.Columns.Column msg"},{"name":"gaplessColumns","comment":" `div.columns.is-gapless`\n","type":"List.List (SE.UI.Columns.Column msg) -> Html.Styled.Html msg"},{"name":"gaplessMultilineColumns","comment":" `div.columns.is-multiline.is-gapless`\n","type":"List.List (SE.UI.Columns.Column msg) -> Html.Styled.Html msg"},{"name":"multilineColumns","comment":" `div.columns.is-multiline`\n","type":"List.List (SE.UI.Columns.Column msg) -> Html.Styled.Html msg"},{"name":"smallColumns","comment":" `div.columns.is-2`\n","type":"List.List (SE.UI.Columns.Column msg) -> Html.Styled.Html msg"},{"name":"smallMultilineColumns","comment":" `div.columns.is-multiline.is-2`\n","type":"List.List (SE.UI.Columns.Column msg) -> Html.Styled.Html msg"},{"name":"wideColumns","comment":" `div.columns.is-4`\n","type":"List.List (SE.UI.Columns.Column msg) -> Html.Styled.Html msg"},{"name":"wideMultilineColumns","comment":" `div.columns.is-multiline.is-4`\n","type":"List.List (SE.UI.Columns.Column msg) -> Html.Styled.Html msg"}],"binops":[]},{"name":"SE.UI.Container","comment":" Bulmas container tag, but max-width is set to 1680px for all devices\nsee <https://bulma.io/documentation/layout/container/>\n\n\n# Definition\n\n@docs container, Modifier\n\n","unions":[{"name":"Modifier","comment":" For now, only Fluid modifier is supported\n","args":[],"cases":[["Fluid",[]],["Small",[]]]}],"aliases":[],"values":[{"name":"container","comment":" A simple container to center your content horizontally\nOnly support the Fluid modifier, no is-widescreen or similar.\n","type":"List.List SE.UI.Container.Modifier -> List.List (Html.Styled.Html msg) -> Html.Styled.Html msg"}],"binops":[]},{"name":"SE.UI.Content","comment":" Bulmas content element\nsee <https://bulma.io/documentation/elements/content/>\n\n\n# Definition\n\n@docs content\n\n","unions":[],"aliases":[],"values":[{"name":"content","comment":" Styles most HTML tags\n\n  - <p> paragraphs\n  - <ul> <ol> <dl> lists\n  - <h1> to <h6> headings\n  - <blockquote> quotes\n  - <em> and <strong>\n  - <table> <tr> <th> <td> tables\n\nWorks like a normal Html.Styled.div:\n\n    content []\n        [ h1 [] [ text \"Heading 1\" ]\n        , p [] [ text \"Content body text\" ]\n        ]\n\n","type":"List.List (Html.Styled.Attribute msg) -> List.List (Html.Styled.Html msg) -> Html.Styled.Html msg"}],"binops":[]},{"name":"SE.UI.Control","comment":" Helper functions for form elements and buttons.\n\n@docs controlHeight, controlStyle, Size\n\n","unions":[{"name":"Size","comment":" Form input controls and buttons use this type as an argument to their Size Modifier\n","args":[],"cases":[["Regular",[]],["Small",[]],["Medium",[]],["Large",[]]]}],"aliases":[],"values":[{"name":"controlHeight","comment":" Height used for controls like buttons and text inputs.\n","type":"Css.Em"},{"name":"controlStyle","comment":" \"Normalized\" style for controls like buttons and input text fields.\n","type":"SE.UI.Control.Size -> Css.Style"}],"binops":[]},{"name":"SE.UI.Delete","comment":" Bulmas delete tag\nsee <https://bulma.io/documentation/elements/delete/>\n\n\n# Definition\n\n@docs small, regular, medium, large\n\n","unions":[],"aliases":[],"values":[{"name":"large","comment":" Large delete button (40px)\n","type":"List.List Css.Style -> msg -> Html.Styled.Html msg"},{"name":"medium","comment":" Medium delete button (28px)\n","type":"List.List Css.Style -> msg -> Html.Styled.Html msg"},{"name":"regular","comment":" Regular delete button (20px)\n","type":"List.List Css.Style -> msg -> Html.Styled.Html msg"},{"name":"small","comment":" Small delete button (16px)\n","type":"List.List Css.Style -> msg -> Html.Styled.Html msg"}],"binops":[]},{"name":"SE.UI.Dropdown","comment":" Bulmas Dropdown component\nsee <https://bulma.io/documentation/components/dropdown/>\n\nThe Elm Arcitecture makes it a little difficult to listen to clicks on the entire document. Instead we use the OuterClick utility library to know if the user has clicked outside of the dropdown.\n\n\n# Unsupported features\n\n  - Hoverable\n  - Right aligned\n  - Drop up\n\n\n# Definition\n\n@docs dropdown\n\n\n# Button\n\n@docs button, customButton\n\n\n# Content\n\n@docs Item, link, content, hr\n\n","unions":[{"name":"Item","comment":" Use `link`, `content` or `hr` to create a dropdown item\n","args":["msg"],"cases":[]}],"aliases":[],"values":[{"name":"button","comment":" The dropdown button, toggles open/closed\nsee the button component for more documentation on the modifiers\n","type":"List.List SE.UI.Buttons.Modifier -> Maybe.Maybe msg -> List.List (Html.Styled.Html msg) -> SE.UI.Dropdown.Button msg"},{"name":"content","comment":" Renders a dropdown content tag\n","type":"List.List (Html.Styled.Html msg) -> SE.UI.Dropdown.Item msg"},{"name":"customButton","comment":" Like the `button` function but completely custom. The navbar uses this to create dropdowns with text links instead of a regular button.\n","type":"Html.Styled.Html msg -> SE.UI.Dropdown.Button msg"},{"name":"dropdown","comment":" Render the dropdown\nParameters\n\n1.  String id for the dropdown, should be unique in order to support multiple dropdowns on the same page\n2.  Close message\n3.  Bool isOpen\n4.  A button created via the `button` function\n5.  A list of Items created via `link`, `content` or `hr`\n\n","type":"String.String -> msg -> Basics.Bool -> SE.UI.Dropdown.Button msg -> List.List (SE.UI.Dropdown.Item msg) -> Html.Styled.Html msg"},{"name":"hr","comment":" Renders a dropdown divider\n","type":"SE.UI.Dropdown.Item msg"},{"name":"link","comment":" Renders a dropdown item\n","type":"SE.UI.Dropdown.Url -> List.List (Html.Styled.Html msg) -> SE.UI.Dropdown.Item msg"}],"binops":[]},{"name":"SE.UI.Form","comment":" Bulmas Form elements\nsee <https://bulma.io/documentation/form/>\n\n\n# General\n\n@docs label, labelRequired\n\n\n# Fields and Controls\n\n@docs field, FieldModifier, control, expandedControl\n\n\n# Unsupported features\n\n  - Horizontal form\n  - Size modifier (for some elements)\n  - .help\n  - icons in input, textarea, select .control\n\n","unions":[{"name":"FieldModifier","comment":" Field Modifier\n","args":[],"cases":[["Attached",[]],["Grouped",[]]]}],"aliases":[],"values":[{"name":"control","comment":" `div.control`\n\n    control False [] == \"<div class='control'></div>\"\n\n    control True [] == \"<div class='control is-loading'></div>\"\n\n","type":"SE.UI.Form.IsLoading -> List.List (Html.Styled.Html msg) -> Html.Styled.Html msg"},{"name":"expandedControl","comment":" `div.control.is-expanded`\n\n    expandedControl False [] == \"<div class='controlis-expanded'></div>\"\n\n    expandedControl True [] == \"<div class='control is-expanded is-loading'></div>\"\n\n","type":"SE.UI.Form.IsLoading -> List.List (Html.Styled.Html msg) -> Html.Styled.Html msg"},{"name":"field","comment":" `div.field`\n\n    field [] [ text \"Field\" ] == \"<div class='field'>Field</div>\"\n\n    field [ Attached ] [ text \"Attached field\" ] = \"<div class='field'> Attached field</div>\"\n\n    field [ Grouped ] [ text \"Grouped field\" ] = \"<div class='field'>Grouped field</div>\"\n\n","type":"List.List SE.UI.Form.FieldModifier -> List.List (Html.Styled.Html msg) -> Html.Styled.Html msg"},{"name":"label","comment":" `label.label`\n","type":"String.String -> Html.Styled.Html msg"},{"name":"labelRequired","comment":" `label.label` with a red \\* at the end.let\n**Notice:** There is not validation connected to this function. The validation has to be carried out on the input function.\nin\n","type":"String.String -> Html.Styled.Html msg"}],"binops":[]},{"name":"SE.UI.Form.Input","comment":" Essentially all input elements except buttons\n\n\n# With\\* pattern (pron. With start pattern)\n\nThe inspiration to this module and its API comes from Brian Hicks talk about Robot Buttons from Mars (<https://youtu.be/PDyWP-0H4Zo?t=1467>). (Please view the entire talk).\n\nExample:\n\n    Input.text (\\input -> TriggerMsgWithInputString input) inputStringValue\n        |> Input.withPlaceholder \"A placeholder to explain this input\"\n        |> Input.withModifier Input.Primary\n        |> Input.toHtml\n\n@docs text, textarea, select, Option, checkbox, radio, number, date, email, password, tel, toHtml\n\n\n# Triggers\n\nTraditionally, Elm apps use [`onInput`](https://package.elm-lang.org/packages/elm/html/latest/Html-Events#onInput) to drive form interactions. Sometimes though, we need to wait for the use to be done modifying the input before we can take action on it. The range filter inputs are an exceptional example of this since we do not want to alter the search result when the user adjust the price range. We should only update the query once the user have decided on an acceptable price range.\n\nTo allow the programmer to specify _when_ a message should trigger, the inputs have a `Trigger` type which can take either `OnInput` or `OnChange`. `OnChange` (usually) triggers once the user leaves the input.\n\n@docs withTrigger, Trigger\n\n\n# With\\*\n\n@docs withPlaceholder, withName, withRequired, withDisabled, withReadonly, withStep, withRange, withRows, withMinDate, withMaxDate, withNewPassword\n\n\n## Modifiers\n\n@docs withModifier, withModifiers, Modifier\n\n\n# Styles\n\n@docs inputStyle\n\n","unions":[{"name":"Modifier","comment":" Available input modifiers\n","args":[],"cases":[["Primary",[]],["Danger",[]],["Size",["SE.UI.Control.Size"]],["Loading",[]],["Static",[]]]},{"name":"Trigger","comment":" Available triggers\n","args":[],"cases":[["OnInput",[]],["OnChange",[]]]}],"aliases":[{"name":"Option","comment":" label and value properties for the <option> tag\n","args":[],"type":"{ label : String.String, value : String.String }"}],"values":[{"name":"checkbox","comment":" The checkbox depart from Bulma to get a \"better looking\" checkbox.\n","type":"msg -> String.String -> Basics.Bool -> SE.UI.Form.Input.Input msg"},{"name":"date","comment":" `input[type=\"date\"].input`\n","type":"(String.String -> msg) -> String.String -> SE.UI.Form.Input.Input msg"},{"name":"email","comment":" `input[type=\"email\"].input`\n","type":"(String.String -> msg) -> String.String -> SE.UI.Form.Input.Input msg"},{"name":"inputStyle","comment":" Use this if you need a custom input with our styling\n","type":"List.List SE.UI.Form.Input.Modifier -> List.List Css.Style"},{"name":"number","comment":" `input[type=\"number\"].input`\n\nonChange is the default trigger\n\n","type":"(String.String -> msg) -> String.String -> SE.UI.Form.Input.Input msg"},{"name":"password","comment":" `input[type=\"password\"].input`\n","type":"(String.String -> msg) -> String.String -> SE.UI.Form.Input.Input msg"},{"name":"radio","comment":" The radio depart from Bulma to get a \"better looking\" radio.\n","type":"msg -> String.String -> Basics.Bool -> SE.UI.Form.Input.Input msg"},{"name":"select","comment":" `select` with input styling\n\n`is-multiple` and `is-rounded` not supported\n\n","type":"(String.String -> msg) -> List.List SE.UI.Form.Input.Option -> String.String -> SE.UI.Form.Input.Input msg"},{"name":"tel","comment":" `input[type=\"tel\"].input`\n","type":"(String.String -> msg) -> String.String -> SE.UI.Form.Input.Input msg"},{"name":"text","comment":" `input.input`\n","type":"(String.String -> msg) -> String.String -> SE.UI.Form.Input.Input msg"},{"name":"textarea","comment":" `textarea.textarea`\n","type":"(String.String -> msg) -> String.String -> SE.UI.Form.Input.Input msg"},{"name":"toHtml","comment":" Turn the Input into Html\n\nUse it in the end of a pipeline, see the example at the top.\n\n","type":"SE.UI.Form.Input.Input msg -> Html.Styled.Html msg"},{"name":"withDisabled","comment":" Add disabled to the input\n","type":"SE.UI.Form.Input.Input msg -> SE.UI.Form.Input.Input msg"},{"name":"withMaxDate","comment":" Add max date to a date input. All other input types will ignore this function\n","type":"String.String -> SE.UI.Form.Input.Input msg -> SE.UI.Form.Input.Input msg"},{"name":"withMinDate","comment":" Add min date to a date input. All other input types will ignore this function\n","type":"String.String -> SE.UI.Form.Input.Input msg -> SE.UI.Form.Input.Input msg"},{"name":"withModifier","comment":" Add a `Modifier` to an input.\n\nPlease review the Modifier documentation for further information.\n\n","type":"SE.UI.Form.Input.Modifier -> SE.UI.Form.Input.Input msg -> SE.UI.Form.Input.Input msg"},{"name":"withModifiers","comment":" Add (not replace) multiple `Modifier` to an input.\n\nPlease review the Modifier documentation for further information.\n\n","type":"List.List SE.UI.Form.Input.Modifier -> SE.UI.Form.Input.Input msg -> SE.UI.Form.Input.Input msg"},{"name":"withName","comment":" Add the name attribute to the input\n","type":"String.String -> SE.UI.Form.Input.Input msg -> SE.UI.Form.Input.Input msg"},{"name":"withNewPassword","comment":" Add autocomplete = new-password to password input\n","type":"SE.UI.Form.Input.Input msg -> SE.UI.Form.Input.Input msg"},{"name":"withPlaceholder","comment":" Add placeholder to the input\n\nNote: The checkbox and radio input does not have a placeholder so they will ignore calls to this function\n\n","type":"String.String -> SE.UI.Form.Input.Input msg -> SE.UI.Form.Input.Input msg"},{"name":"withRange","comment":" Add min and max to a number input. All other input types will ignore this function\n","type":"( Basics.Float, Basics.Float ) -> SE.UI.Form.Input.Input msg -> SE.UI.Form.Input.Input msg"},{"name":"withReadonly","comment":" Add readonly to the input\n","type":"SE.UI.Form.Input.Input msg -> SE.UI.Form.Input.Input msg"},{"name":"withRequired","comment":" Add required to the input\n","type":"SE.UI.Form.Input.Input msg -> SE.UI.Form.Input.Input msg"},{"name":"withRows","comment":" Add rows a textarea input. All other input types will ignore this function\n","type":"Basics.Int -> SE.UI.Form.Input.Input msg -> SE.UI.Form.Input.Input msg"},{"name":"withStep","comment":" Add step to a number input. All other input types will ignore this function\n","type":"Basics.Float -> SE.UI.Form.Input.Input msg -> SE.UI.Form.Input.Input msg"},{"name":"withTrigger","comment":" Change the trigger of the input\n\nNote: The checkbox, radio and select input will ignore calls to this function since they can only the onChange trigger\n\n","type":"SE.UI.Form.Input.Trigger -> SE.UI.Form.Input.Input msg -> SE.UI.Form.Input.Input msg"}],"binops":[]},{"name":"SE.UI.Global","comment":" Global reset and base styles, based on Bulmas minireset.sass and generic.sass\n\n\n# Definition\n\n@docs global\n\n","unions":[],"aliases":[],"values":[{"name":"global","comment":" Add this constant as a plain html element, preferably as high in the hierarchy as possible\n\n    div []\n        [ global\n        , h1 [] [ text \"Hello World!\" ]\n        ]\n\n","type":"Html.Styled.Html msg"}],"binops":[]},{"name":"SE.UI.Icon","comment":" Creates a Bulma Icon element set.\n\nWe use more or less the same styles for the icon container but We use plain inline svgs for icons instead of FontAwesome. This gives us the flexibility and speed that we want (FontAwesome is a 500kb js file to begin with).\n\n<https://bulma.io/documentation/elements/icon/>\n\n\n# Available icons\n\n@docs angleDown, angleUp, ban, bargain, bid, box, boxes, calendar, campaign, cart, category, checkCircle, clock, dolly, envelope, ethernet, eye, facebook, file, history, home, images, instagram, laptop, lightbulb, linkedin, mapMarker, new, notification, pdf, percentage, phone, playCircle, satelliteDish, search, slidersH, star, table, th, thLarge, thList, trash, truck, tv, user, wifi, youtube\n\n\n# Css Backgrounds\n\nFor some icons we need include them as a css background (example select-element and \"show more\"-links)\n\n@docs angleDownCssBackground, tick, circle\n\n","unions":[],"aliases":[],"values":[{"name":"angleDown","comment":" <https://fontawesome.com/icons/angle-down?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"angleDownCssBackground","comment":" Used in select elements and \"show more\" links\n","type":"String.String"},{"name":"angleUp","comment":" Same as `angleDown`, but flipped.\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"ban","comment":" <https://fontawesome.com/icons/ban?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"bargain","comment":" <https://fontawesome.com/icons/piggy-bank?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"bid","comment":" <https://fontawesome.com/icons/gavel?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"box","comment":" <https://fontawesome.com/icons/box?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"boxes","comment":" <https://fontawesome.com/icons/boxes?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"calendar","comment":" <https://fontawesome.com/icons/calendar-alt?style=regular>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"campaign","comment":" <https://fontawesome.com/icons/tag?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"cart","comment":" <https://fontawesome.com/icons/shopping-cart?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"category","comment":" <https://fontawesome.com/icons/sitemap?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"checkCircle","comment":" <https://fontawesome.com/icons/check-circle?style=regular>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"circle","comment":" Radio button background\n","type":"String.String"},{"name":"clock","comment":" <https://fontawesome.com/icons/clock?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"dolly","comment":" <https://fontawesome.com/icons/dolly?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"envelope","comment":" <https://fontawesome.com/icons/envelope?style=regular>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"ethernet","comment":" <https://fontawesome.com/icons/ethernet?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"eye","comment":" <https://fontawesome.com/icons/eye?style=regular>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"facebook","comment":" <https://fontawesome.com/icons/facebook-square?style=brands>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"file","comment":" <https://fontawesome.com/icons/file-alt?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"history","comment":" <https://fontawesome.com/icons/history?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"home","comment":" <https://fontawesome.com/icons/home?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"images","comment":" <https://fontawesome.com/icons/images?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"instagram","comment":" <https://fontawesome.com/icons/instagram?style=brands>\nLike all social media icons, they are mounted on a hexagon shape\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"laptop","comment":" <https://fontawesome.com/icons/laptop?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"lightbulb","comment":" <https://fontawesome.com/icons/lightbulb?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"linkedin","comment":" <https://fontawesome.com/icons/linkedin-square?style=brands>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"mapMarker","comment":" <https://fontawesome.com/icons/map-marker-alt?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"new","comment":" <https://fontawesome.com/icons/certificate?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"notification","comment":" <https://fontawesome.com/icons/notification?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"pdf","comment":" <https://fontawesome.com/icons/file-pdf?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"percentage","comment":" <https://fontawesome.com/icons/percentage?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"phone","comment":" <https://fontawesome.com/icons/phone?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"playCircle","comment":" <https://fontawesome.com/icons/play-circle?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"satelliteDish","comment":" <https://fontawesome.com/icons/satellite-dish?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"search","comment":" <https://fontawesome.com/icons/search?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"slidersH","comment":" <https://fontawesome.com/icons/sliders-h?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"star","comment":" <https://fontawesome.com/icons/star?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"table","comment":" Custom icon to mediate a tight product view table\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"th","comment":" <https://fontawesome.com/icons/th?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"thLarge","comment":" <https://fontawesome.com/icons/th-large?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"thList","comment":" <https://fontawesome.com/icons/th-list?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"tick","comment":" Checkbox background\n","type":"String.String"},{"name":"trash","comment":" <https://fontawesome.com/icons/trash-alt?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"truck","comment":" <https://fontawesome.com/icons/truck?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"tv","comment":" <https://fontawesome.com/icons/tv?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"user","comment":" <https://fontawesome.com/icons/user?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"wifi","comment":" <https://fontawesome.com/icons/wifi?style=solid>\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"},{"name":"youtube","comment":" <https://fontawesome.com/icons/youtube?style=brands>\nLike all social media icons, they are mounted on a hexagon shape\n","type":"SE.UI.Control.Size -> Html.Styled.Html msg"}],"binops":[]},{"name":"SE.UI.Image","comment":" Image lets you create img tags with multiple sources to support responsive images\nWe do not support all aspect ratios and sizes since we can set the dimensions directly\n\n\n# Definition\n\n@docs picture, image, noImage, Modifier\n\n\n# Source and Srcset\n\n@docs source, srcset, alt\n\n","unions":[{"name":"Modifier","comment":" Dimensions for the image\n\nExample:\n\n    Fluid = \".image\"\n\n    Fixed 128 128 = \".image.is-128x128\"\n\n    Square = \"image.is-square\"\n\n","args":[],"cases":[["Fluid",[]],["Fixed",["SE.UI.Image.Width","SE.UI.Image.Height"]],["Square",[]]]}],"aliases":[],"values":[{"name":"alt","comment":" Fallback description if image cannot be loaded\n","type":"String.String -> SE.UI.Image.Alt"},{"name":"image","comment":" Create and img tag with a list of srcsets. If the list of srcsets is empty or hasn't got a single srcset with the resolution of 1, then this function will output an empty text tag.\n\n    image (alt \"Fallback text\") (Fixed 640 480)\n        [ srcset \"https://bulma.io/images/placeholders/640x480.png\" 1\n        , srcset \"https://bulma.io/images/placeholders/1280x960.png\" 2\n        ] == '<figure style=\"position: relative;display: block;\"><img style=\"display: block;height: auto;width: 100%;\" src=\"https://bulma.io/images/placeholders/640x480.png\" width=\"640\" height=\"480\" srcset=\"https://bulma.io/images/placeholders/640x480.png 1x, https://bulma.io/images/placeholders/1280x960.png 2x\"></figure>'\n\n","type":"SE.UI.Image.Alt -> SE.UI.Image.Modifier -> List.List SE.UI.Image.Srcset -> Html.Styled.Html msg"},{"name":"noImage","comment":" Image placeholder when image is missing\n","type":"Html.Styled.Html msg"},{"name":"picture","comment":" Creates a picture element with a list of sources. Each source must contain a list of srcsets. The mimetype is extracted from the first srcset of each source, webp images is sorted first and the last source with the lowest resolution is inserted as a fallback img element.\n\nOnly use the picture element if you have multiple identical images in different file formats. If you only have 1 format, use the `image` function instead.\n\n    picture (alt \"A fallback text if the images cannot be loaded\") (Fixed 640 480)\n        [\n            source [\n                srcset \"https://bulma.io/images/placeholders/640x480.webp\" 1\n                srcset \"https://bulma.io/images/placeholders/1280x960.webp\" 2\n            ],\n            source [\n                srcset \"https://bulma.io/images/placeholders/640x480.png\" 1\n                srcset \"https://bulma.io/images/placeholders/1280x960.png\" 2\n            ]\n        ] == \"<figure style='position: relative;display: block;'>\n                <picture style='display: block;height: auto;width: 100%;' width='640' height='480'>\n                    <source srcset='https://bulma.io/images/placeholders/640x480.webp 1x, https://bulma.io/images/placeholders/1280x960.webp 2x' type='image/webp'>\n                    <source srcset='https://bulma.io/images/placeholders/640x480.png 1x, https://bulma.io/images/placeholders/1280x960.png 2x' type='image/png'>\n                </picture>\n            </figure>\"\n\n","type":"SE.UI.Image.Alt -> SE.UI.Image.Modifier -> List.List SE.UI.Image.Source -> Html.Styled.Html msg"},{"name":"source","comment":" Create a source tag with multiple srcset values, it compiles to a source-tag with srcset attribute and a type attribute containing the mimetype. The mimetype is based on the first url of the first srcset. Only images with WebP, Jpg (also Jpeg), Gif and Png are allowed.\n\nOnly used in combination with `picture`.\n\n    source [\n        srcset \"https://bulma.io/images/placeholders/640x480.png\" 1\n        , srcset \"https://bulma.io/images/placeholders/1280x960.png\" 2\n    ] == \"<source srcset='https://bulma.io/images/placeholders/640x480.png 1x, https://bulma.io/images/placeholders/1280x960.png 2x' type='image/png'>\"\n\n","type":"List.List SE.UI.Image.Srcset -> SE.UI.Image.Source"},{"name":"srcset","comment":" Create a srcset attribute with a url and a resolution (1,2,3)\nRead more about the srcset attribute at <https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images>\n\n    srcset \"https://bulma.io/images/placeholders/640x480.png\" 1\n\n","type":"String.String -> SE.UI.Image.Resolution -> SE.UI.Image.Srcset"}],"binops":[]},{"name":"SE.UI.Image.V2","comment":" Image component version 2\n\nMuch of the inspiration comes from this article:\n<https://www.industrialempathy.com/posts/image-optimizations/>\n\n@docs Image, create, toSimpleHtml, toHtml, source, srcset\n\n\n# Modifiers\n\n@docs withAspectRatio, withoutLazyLoading, withoutAsyncDecoding\n\n","unions":[{"name":"Image","comment":" The internal type, it is exposed to help with type annotations\n","args":[],"cases":[]}],"aliases":[],"values":[{"name":"create","comment":" Create an Image type with mandatory width and height\n","type":"{ width : Basics.Int, height : Basics.Int } -> SE.UI.Image.V2.Image"},{"name":"source","comment":" Create a source tag with multiple srcset values, it compiles to a source-tag with srcset attribute and a type attribute containing the mimetype. The mimetype is based on the first url of the first srcset. Only images with WebP, Jpg (also Jpeg), Gif and Png are allowed.\n\nOnly used in combination with `picture`.\n\n    source\n        [ srcset \"https://bulma.io/images/placeholders/640x480.png\" 1\n        , srcset \"https://bulma.io/images/placeholders/1280x960.png\" 2\n        ]\n        == \"<source srcset='https://bulma.io/images/placeholders/640x480.png 1x, https://bulma.io/images/placeholders/1280x960.png 2x' type='image/png'>\"\n\n","type":"List.List SE.UI.Image.V2.Srcset -> SE.UI.Image.V2.Source"},{"name":"srcset","comment":" Create a srcset attribute with a url and a resolution (1,2,3)\nRead more about the srcset attribute at <https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images>\n\n    srcset \"https://bulma.io/images/placeholders/640x480.png\" 1\n\n","type":"String.String -> Basics.Int -> SE.UI.Image.V2.Srcset"},{"name":"toHtml","comment":" Turn the Image into Html, provide an alt string and a list is sources. Produces\n\n    <figure>\n        <picture>\n            <source srcset=\"https://example.com/image.png 1x\">\n            <img alt=\"Alt text\" src=\"https://example.com/image.png\" />\n        </picture>\n    </figure>\n\n","type":"String.String -> List.List SE.UI.Image.V2.Source -> SE.UI.Image.V2.Image -> Html.Styled.Html msg"},{"name":"toSimpleHtml","comment":" Turn the Image into an img tag, with a container figure tag, provide an alt string and a list is sources. Produces\n\n    <figure>\n        <img alt=\"Alt text\" src=\"https://example.com/image.png\" />\n    </figure>\n\nUse this if you only have an image with a single resolution and file type\n\n","type":"{ alt : String.String, src : String.String } -> SE.UI.Image.V2.Image -> Html.Styled.Html msg"},{"name":"withAspectRatio","comment":" Add aspect ratio\n\n    ( 16, 9 ) => 16 / 9\n\n","type":"( Basics.Int, Basics.Int ) -> SE.UI.Image.V2.Image -> SE.UI.Image.V2.Image"},{"name":"withoutAsyncDecoding","comment":" Remove default async decoding\n","type":"SE.UI.Image.V2.Image -> SE.UI.Image.V2.Image"},{"name":"withoutLazyLoading","comment":" Remove default lazy loading\n","type":"SE.UI.Image.V2.Image -> SE.UI.Image.V2.Image"}],"binops":[]},{"name":"SE.UI.Level","comment":" Bulmas level component\nsee <https://bulma.io/documentation/layout/level/>\n\nThis module is divided levels and items.\n\n\n# Levels\n\n@docs level, mobileLevel, centeredLevel\n\n\n# Item\n\n@docs Item, item\n\n","unions":[{"name":"Item","comment":" Use the `item` function to create a level item\n","args":["msg"],"cases":[]}],"aliases":[],"values":[{"name":"centeredLevel","comment":" Centered level, takes 1 list of `item`\n","type":"List.List (SE.UI.Level.Item msg) -> Html.Styled.Html msg"},{"name":"item","comment":" Item\n","type":"List.List (Html.Styled.Html msg) -> SE.UI.Level.Item msg"},{"name":"level","comment":" Takes 2 lists of `item`, the first will be left-aligned, the second right-aligned\n","type":"List.List (SE.UI.Level.Item msg) -> List.List (SE.UI.Level.Item msg) -> Html.Styled.Html msg"},{"name":"mobileLevel","comment":" Same as the standard level, except that the level will maintain its horizontal layout on mobile size.\n","type":"List.List (SE.UI.Level.Item msg) -> List.List (SE.UI.Level.Item msg) -> Html.Styled.Html msg"}],"binops":[]},{"name":"SE.UI.Logo","comment":" Special-Elektronik logo as Svg\n\n@docs onWhite, onBlack\n\n","unions":[],"aliases":[],"values":[{"name":"onBlack","comment":" Our logo with white text\n","type":"Html.Styled.Html msg"},{"name":"onWhite","comment":" Our logo with black text\n","type":"Html.Styled.Html msg"}],"binops":[]},{"name":"SE.UI.Logos.Crestron","comment":" Crestron logos\n\nAll Crestron logos are trademarks of Crestron Electronics, Inc. (<https://www.crestron.com/Legal/Trademarks>)\n\n\n# Regular\n\n@docs blue, black, white\n\n\n# Stack\n\n@docs blueStack, blackStack, whiteStack\n\n\n# Swirl\n\n@docs blueSwirl, blackSwirl, whiteSwirl\n\n","unions":[],"aliases":[],"values":[{"name":"black","comment":" The regular logo in black\n","type":"Html.Styled.Html msg"},{"name":"blackStack","comment":" The stacked logo in black\n","type":"Html.Styled.Html msg"},{"name":"blackSwirl","comment":" The Crestron \"swirl\" in black\n","type":"Html.Styled.Html msg"},{"name":"blue","comment":" The regular logo in 'Crestron blue'\n","type":"Html.Styled.Html msg"},{"name":"blueStack","comment":" The stacked logo in 'Crestron blue'\n","type":"Html.Styled.Html msg"},{"name":"blueSwirl","comment":" The Crestron \"swirl\" in 'Crestron blue'\n","type":"Html.Styled.Html msg"},{"name":"white","comment":" The regular logo in white\n","type":"Html.Styled.Html msg"},{"name":"whiteStack","comment":" The stacked logo in white\n","type":"Html.Styled.Html msg"},{"name":"whiteSwirl","comment":" The Crestron \"swirl\" in white\n","type":"Html.Styled.Html msg"}],"binops":[]},{"name":"SE.UI.Logos.Panasonic","comment":" Panasonic Business logos\n\nAll Panasonic Business logos are trademarks of Crestron Electronics, Inc. (<https://business.panasonic.se/terms-conditions>)\n\nThe logo comes in color (The \"Business\" byline is in blue) and monochrome\n\n@docs onWhite, onBlack, IsMonochrome\n\n","unions":[],"aliases":[{"name":"IsMonochrome","comment":" Type alias for Bool\n","args":[],"type":"Basics.Bool"}],"values":[{"name":"onBlack","comment":" Use this logo on dark backgrounds\n","type":"SE.UI.Logos.Panasonic.IsMonochrome -> Html.Styled.Html msg"},{"name":"onWhite","comment":" Use this logo on light backgrounds\n","type":"SE.UI.Logos.Panasonic.IsMonochrome -> Html.Styled.Html msg"}],"binops":[]},{"name":"SE.UI.Modal","comment":" Bulmas modal component\nsee <https://bulma.io/documentation/components/modal/>\n\n\n# Definition\n\n@docs modal, fullWidthModal\n\n","unions":[],"aliases":[],"values":[{"name":"fullWidthModal","comment":" Identical to `modal` except it uses the full width of the browser window so show its content.\n","type":"msg -> List.List (Html.Styled.Html msg) -> Html.Styled.Html msg"},{"name":"modal","comment":" The modal does not have an active state, to close the modal, simple don't render it.\n","type":"msg -> List.List (Html.Styled.Html msg) -> Html.Styled.Html msg"}],"binops":[]},{"name":"SE.UI.Navbar","comment":" A highly customized version of Bulmas navbar component\n\nHow to use:\n\n    type alias Model =\n        { navbar : Navbar.Model\n        }\n\n    initialModel : Model\n    initialModel =\n        { navbar = Navbar.defaultModel\n        }\n\n    type Msg\n        = GotNavbarMsg Navbar.Msg\n\n    update : Msg -> Model -> Model\n    update msg model =\n        case msg of\n            GotNavbarMsg subMsg ->\n                { model | navbar = Navbar.update subMsg model.navbar }\n\n@docs Config, Brand, Model, defaultModel, Msg, update\n\n\n# View\n\n@docs view\n\n\n# Items and links\n\n@docs Item, Link, MegaItem\n\n","unions":[{"name":"Brand","comment":" The default logo adapts to the black or white background, if you want to use a custom logo, provide 2 image urls for white and black background, it could be the same. The image height will be 48px.\n","args":[],"cases":[["DefaultBrand",["SE.UI.Navbar.Url"]],["CustomBrand",["{ onWhite : String.String, onBlack : String.String }","SE.UI.Navbar.Url"]]]},{"name":"Item","comment":" The 3 different link options available:\n\nLinkItem : Regular link\nDropdownItem : Dropdown (see SE.UI.Dropdown)\nCustomItem : Custom html, for icons, cart etc.\n\n","args":["msg"],"cases":[["LinkItem",["SE.UI.Navbar.Link msg"]],["DropdownItem",["SE.UI.Navbar.Dropdown msg"]],["CustomItem",["List.List (Html.Styled.Html msg)"]]]},{"name":"Msg","comment":" Internal Msg for the component. See example at the top.\n","args":[],"cases":[]}],"aliases":[{"name":"Config","comment":" Navbar config holds the static content that cannot change in the UI. Everything else needs to go in the model.\n\nribbon: On desktop the links are displayed in the upper right corner. Om tablets the links are placed after the main nav links but before the social media icons.\n\nmainNav: On desktop the items are displayed to the right of the brand and searchbox. On tablets they are placed after the mega nav items but before the ribbon items.\n\nmegaNav: Displayed below the LED on desktop and first in the links on tablets.\n\nsocialMedia: Only displayed on tablets and below.\n\ntransform : The parent message, see example at the top.\n\n","args":["msg"],"type":"{ brand : SE.UI.Navbar.Brand, ribbon : List.List (SE.UI.Navbar.Link msg), mainNav : List.List (SE.UI.Navbar.Item msg), megaNav : List.List (SE.UI.Navbar.MegaItem msg), socialMedia : List.List (SE.UI.Navbar.SocialMedia msg), transform : SE.UI.Navbar.Msg -> msg }"},{"name":"Link","comment":" A link with label, href attribute and an optional icon\n","args":["msg"],"type":"{ href : Html.Styled.Attribute msg, label : String.String, icon : Maybe.Maybe (SE.UI.Control.Size -> Html.Styled.Html msg) }"},{"name":"MegaItem","comment":" A mega item contains custom html that is shown if activated on desktop. On mobile and tablets, the mega item is a regular link.\n","args":["msg"],"type":"{ label : String.String, href : Html.Styled.Attribute msg, content : Html.Styled.Html msg }"},{"name":"Model","comment":" Store the state of the navbar, if the navbar is open (only affects tablet and below view) and the id of the active dropdown (if any). The ids are autogenerated.\n","args":[],"type":"{ isOpen : Basics.Bool, activeDropdownId : String.String }"}],"values":[{"name":"defaultModel","comment":" Completely closed menu to start with.\n","type":"SE.UI.Navbar.Model"},{"name":"update","comment":" Internal update for the component. See example at the top.\n","type":"SE.UI.Navbar.Msg -> SE.UI.Navbar.Model -> SE.UI.Navbar.Model"},{"name":"view","comment":" Place the view function as high up in the main view function as possible\n\nThe second argument is the search box which the navbar will just inject the searhcbox in the appropriate place.\n\n","type":"SE.UI.Navbar.Config msg -> Html.Styled.Html msg -> SE.UI.Navbar.Model -> Html.Styled.Html msg"}],"binops":[]},{"name":"SE.UI.Notification","comment":" Bulmas notification element\nsee <https://bulma.io/documentation/elements/notification/>\n\n\n# Definition\n\nThis module exposes one function for each color. If you supply a message it will be triggered if the user clicks the delete button. If no message is supplied, no delete button will be displayed.\n\n@docs notification, primary, link, danger, custom\n\n","unions":[],"aliases":[],"values":[{"name":"custom","comment":" Notification with custom color\nPlease use sparingly\n","type":"SE.UI.Colors.Color -> Maybe.Maybe msg -> List.List (Html.Styled.Html msg) -> Html.Styled.Html msg"},{"name":"danger","comment":" Danger notification\n","type":"Maybe.Maybe msg -> List.List (Html.Styled.Html msg) -> Html.Styled.Html msg"},{"name":"link","comment":" Link notification\n","type":"Maybe.Maybe msg -> List.List (Html.Styled.Html msg) -> Html.Styled.Html msg"},{"name":"notification","comment":" Grey notification\n","type":"Maybe.Maybe msg -> List.List (Html.Styled.Html msg) -> Html.Styled.Html msg"},{"name":"primary","comment":" Primary notification\n","type":"Maybe.Maybe msg -> List.List (Html.Styled.Html msg) -> Html.Styled.Html msg"}],"binops":[]},{"name":"SE.UI.OuterClick","comment":" More or less copied from <https://github.com/xarvh/elm-onclickoutside>\n\nExplanation for relatedTarget: <https://stackoverflow.com/questions/42764494/blur-event-relatedtarget-returns-null>\n\nHow to use:\n\n    import Html exposing (..)\n    import Html.Attributes exposing (class)\n    import SE.UI.OuterClick\n\n    type Msg\n    = UserClickedOutsideOfFruitDropdown\n\n    dropdownView =\n    let\n    onClickOutsideAttributes =\n    SE.UI.OuterClick.withId \"fruit-dropdown\" UserClickedOutsideOfFruitDropdown\n\n            otherAttributes =\n                [ class \"generic-dropdown\" ]\n\n            allAttributes =\n                onClickOutsideAttributes ++ otherAttributes\n        in\n            div\n                allAttributes\n                [ text \"apples\"\n                , text \"oranges\"\n                , text \"pears\"\n                ]\n\n@docs withId, succeedIfClickIsOutsideOfId\n\n","unions":[],"aliases":[],"values":[{"name":"succeedIfClickIsOutsideOfId","comment":" This is a Json.Decoder that you can use to decode a DOM\n[FocusEvent](https://developer.mozilla.org/en-US/docs/Web/API/FocusEvent).\nIt will _fail_ if `event.relatedTarget` or any of its ancestors have the\ngiven DOM id.\nIt will succeed otherwise.\n","type":"String.String -> Json.Decode.Decoder ()"},{"name":"withId","comment":" The first argument is the DOM id that you want to assign to the element.\nThe second argument is the message that you want to trigger when the user\nclicks outside the element.\nThe function returns a list of Html.Attributes to apply to the element.\nThe attributes are `tabindex`, `id` and the `focusout` event handler.\nThis function is meant to cover most use cases, but if you need more control\non the attributes, you will have to use\n[succeedIfClickIsOutsideOfId](#succeedIfClickIsOutsideOfId) instead.\n","type":"String.String -> msg -> List.List (Html.Styled.Attribute msg)"}],"binops":[]},{"name":"SE.UI.Pagination","comment":" DEPRECATED! Use SE.UI.Pagination.V2 instead.\n\nBulmas Pagination component\nsee <https://bulma.io/documentation/components/pagination/>\n\n@docs pagination, centeredPagination, rightPagination\n\n\n# Pagination record\n\n@docs PaginationRecord\n\n","unions":[],"aliases":[{"name":"PaginationRecord","comment":" The record holds all the data\n\n  - lastPage: The last possible page that the pagination state could be in\n  - currentPage: The current page\n  - nextPageLabel : Button text for the next button\n  - previousPageLabel : Button text for the previous button\n  - msg : A function that takes an Int and returns a msg, when the message is triggered it will be loaded will the appropriate page to load. (Example: Current page is 4, the next button will trigger `msg 5`)\n\n","args":["msg"],"type":"{ lastPage : Basics.Int, currentPage : Basics.Int, nextPageLabel : String.String, previousPageLabel : String.String, msg : Basics.Int -> msg }"}],"values":[{"name":"centeredPagination","comment":" Centered pagination\n","type":"SE.UI.Pagination.PaginationRecord msg -> Html.Styled.Html msg"},{"name":"pagination","comment":" If the lastPage is <= 7, the pagination will be rendered without any ellipsis. Any number above 7 will render the pagination with ellipsis in the appropriate places.\n\n    pagination\n        { lastPage = 8\n        , currentPage = 5\n        , nextPageLabel = \"Next\"\n        , previousPageLabel = \"Previous\"\n        , msg = ChangePage\n        }\n        == \"1 ... 4 5 6 ... 9\"\n\n","type":"SE.UI.Pagination.PaginationRecord msg -> Html.Styled.Html msg"},{"name":"rightPagination","comment":" Right aligned pagination\n","type":"SE.UI.Pagination.PaginationRecord msg -> Html.Styled.Html msg"}],"binops":[]},{"name":"SE.UI.Pagination.V2","comment":" Bulmas Pagination component\nsee <https://bulma.io/documentation/components/pagination/>\n\n\n# Container\n\n@docs Pagination, create, toHtml\n\n\n# With\\* pattern (pron. With start pattern)\n\nThe inspiration to this module and its API comes from Brian Hicks talk about Robot Buttons from Mars (<https://youtu.be/PDyWP-0H4Zo?t=1467>). (Please view the entire talk).\n\n\n# Modifiers\n\n@docs isLeft, isCentered, isRight, isSmall, isMedium, isLarge\n\n","unions":[{"name":"Pagination","comment":" This opaque type is only exposed to facilitate type annotations outside of the module\n","args":["msg"],"cases":[]}],"aliases":[],"values":[{"name":"create","comment":" If the lastPage is <= 7, the pagination will be rendered without any ellipsis. Any number above 7 will render the pagination with ellipsis in the appropriate places.\n\n    pagination\n        { lastPage = 8\n        , currentPage = 5\n        , nextPageLabel = \"Next\"\n        , previousPageLabel = \"Previous\"\n        , msg = ChangePage\n        }\n        == \"1 ... 4 5 6 ... 9\"\n\nThe record holds all the data\n\n  - lastPage: The last possible page that the pagination state could be in\n  - currentPage: The current page\n  - nextPageLabel : Button text for the next button\n  - previousPageLabel : Button text for the previous button\n  - msg : A function that takes an Int and returns a msg, when the message is triggered it will be loaded will the appropriate page to load. (Example: Current page is 4, the next button will trigger `msg 5`)\n\n","type":"{ currentPage : Basics.Int, lastPage : Basics.Int, nextPageLabel : String.String, previousPageLabel : String.String, msg : Basics.Int -> msg } -> SE.UI.Pagination.V2.Pagination msg"},{"name":"isCentered","comment":" Add .is-centered to the pagination element\n","type":"SE.UI.Pagination.V2.Pagination msg -> SE.UI.Pagination.V2.Pagination msg"},{"name":"isLarge","comment":" Add .is-large to the pagination element\n","type":"SE.UI.Pagination.V2.Pagination msg -> SE.UI.Pagination.V2.Pagination msg"},{"name":"isLeft","comment":" Add .is-left to the pagination element\n","type":"SE.UI.Pagination.V2.Pagination msg -> SE.UI.Pagination.V2.Pagination msg"},{"name":"isMedium","comment":" Add .is-medium to the pagination element\n","type":"SE.UI.Pagination.V2.Pagination msg -> SE.UI.Pagination.V2.Pagination msg"},{"name":"isRight","comment":" Add .is-right to the pagination element\n","type":"SE.UI.Pagination.V2.Pagination msg -> SE.UI.Pagination.V2.Pagination msg"},{"name":"isSmall","comment":" Add .is-small to the pagination element\n","type":"SE.UI.Pagination.V2.Pagination msg -> SE.UI.Pagination.V2.Pagination msg"},{"name":"toHtml","comment":" Turn the Pagination type into Html\n","type":"SE.UI.Pagination.V2.Pagination msg -> Html.Styled.Html msg"}],"binops":[]},{"name":"SE.UI.Section","comment":" Creates a styled section in line with Bulmas section.\n\n\n# Definition\n\n@docs section\n\n","unions":[],"aliases":[],"values":[{"name":"section","comment":" Creates a styled section html tag in line with [Bulmas section](https://bulma.io/documentation/layout/section/).\n\n    section [] [ text \"I'm the text inside the section!\" ] == \"<section>I'm the text inside the section!</section>\"\n\n","type":"List.List (Html.Styled.Attribute msg) -> List.List (Html.Styled.Html msg) -> Html.Styled.Html msg"}],"binops":[]},{"name":"SE.UI.Snackbar","comment":" A Snackbar component for displaying short, unintrusive messages to the user.\n\nHow to use:\n\n    type alias Model =\n        { snackbar : SE.UI.Snackbar.Model\n        }\n\n    initialModel : Model\n    initialModel =\n        { navbar = Snackbar.init\n        }\n\n    type Msg\n        = GotSnackbarMsg SE.UI.Snackbar.Msg\n\n    snackbarConfig : SE.UI.Snackbar.Config Msg\n    snackbarConfig =\n        { transform = GotSnackbarMsg }\n\n    update : Msg -> Model -> ( Model, Cmd Msg )\n    update msg model =\n        case msg of\n            GotSnackbarMsg subMsg ->\n                let\n                    ( newSnackbar, cmds ) =\n                        SE.UI.Snackbar.update snackbarConfig subMsg model.snackbar\n                in\n                ( { model | snackbar = newSnackbar }, cmds )\n\n\n# Definition\n\n@docs Snackbar, create, add, withDuration\n\n\n# Model\n\n@docs Model, init, Config\n\n\n# Update\n\n@docs Msg, update\n\n\n# View\n\n@docs view\n\n","unions":[{"name":"Msg","comment":" The snackbars internal Msg. When the snackbar is added, it will stay visible for `withDuration` milliseconds, then PassedDuration is triggered, which adds \"is-leaving\" class to the snackbar and waits for `durationLength` milliseconds. When the `durationLength` milliseconds has passed, the PassedLeavingDuration Msg is triggered which deletes the snackbar\n","args":[],"cases":[]},{"name":"Snackbar","comment":" The internal type that holds the content and state for a single snackbar\n","args":[],"cases":[]}],"aliases":[{"name":"Config","comment":" Snackbar config holds the static content that cannot change in the UI. Everything else needs to go in the model.\n\ntransform : The parent message, see example at the top.\n\n","args":["msg"],"type":"{ transform : SE.UI.Snackbar.Msg -> msg }"},{"name":"Model","comment":" The internal model\n","args":[],"type":"{ snackbars : Dict.Dict Basics.Int SE.UI.Snackbar.Snackbar, uid : Basics.Int }"}],"values":[{"name":"add","comment":" Add a snackbar to the internal model\n","type":"SE.UI.Snackbar.Config msg -> SE.UI.Snackbar.Model -> SE.UI.Snackbar.Snackbar -> ( SE.UI.Snackbar.Model, Platform.Cmd.Cmd msg )"},{"name":"create","comment":" Create a snackbar with default Duration, to set duraction, see `SE.UI.Snackbar.withDuration`\n","type":"{ label : String.String, message : Html.Styled.Html Basics.Never } -> SE.UI.Snackbar.Snackbar"},{"name":"init","comment":" An empty model, use this during your model init function\n","type":"SE.UI.Snackbar.Model"},{"name":"update","comment":" The snackbars internal update function. Since it uses tasks to delay certain events, it has to return a tuple of the model and commands.\n","type":"SE.UI.Snackbar.Config msg -> SE.UI.Snackbar.Msg -> SE.UI.Snackbar.Model -> ( SE.UI.Snackbar.Model, Platform.Cmd.Cmd msg )"},{"name":"view","comment":" The snackbars view function, place this at the end of your applications view function since it attaches to the bottom (for mobile views) or the right top corner (for desktop) and it needs to stay on top of everything else.\n","type":"SE.UI.Snackbar.Config msg -> SE.UI.Snackbar.Model -> Html.Styled.Html msg"},{"name":"withDuration","comment":" Set the duration of the snackbar\n0 duration implies that it will remain until dismissed\n","type":"Basics.Int -> SE.UI.Snackbar.Snackbar -> SE.UI.Snackbar.Snackbar"}],"binops":[]},{"name":"SE.UI.Table","comment":" Bulmas table element\nsee <https://bulma.io/documentation/elements/table/>\n\nThe table element has several helper functions to make it easy to create the table. The Elm arcitecture makes it possible to require each sub component (like a table head) and structure the code in a very developer friendly way.\n\n\n# Unsupported features\n\n  - .is-selected\n\n\n# Definition\n\n@docs table, Modifier\n\n\n# Header, Body and Footer\n\n@docs head, body, foot, row, cell, rightCell\n\n","unions":[{"name":"Modifier","comment":" All Bulma table modifiers are supported, including the currently undocumented MobileFriendly.\n","args":[],"cases":[["Bordered",[]],["Fullwidth",[]],["Hoverable",[]],["Narrow",[]],["Striped",[]],["White",[]],["Mobilefriendly",[]]]}],"aliases":[],"values":[{"name":"body","comment":" Renders a tbody tag\n","type":"List.List (SE.UI.Table.Row msg) -> SE.UI.Table.Body msg"},{"name":"cell","comment":" Renders th tag if created as a child to the `head` function, otherwise it renders a td tag\n","type":"List.List (Html.Styled.Attribute msg) -> Html.Styled.Html msg -> SE.UI.Table.Cell msg"},{"name":"foot","comment":" Renders a tfoot tag\n","type":"List.List (SE.UI.Table.Cell msg) -> SE.UI.Table.Foot msg"},{"name":"head","comment":" Renders a thead tag\n","type":"List.List (SE.UI.Table.Cell msg) -> SE.UI.Table.Head msg"},{"name":"rightCell","comment":" Renders right aligned th tag if created as a child to the `head` function, otherwise it renders a right aligned td tag\n","type":"List.List (Html.Styled.Attribute msg) -> Html.Styled.Html msg -> SE.UI.Table.Cell msg"},{"name":"row","comment":" Renders a tr tag\n","type":"List.List (SE.UI.Table.Cell msg) -> SE.UI.Table.Row msg"},{"name":"table","comment":" The main container. It takes the modifiers, head and foot to begin with and the body at the end.\n","type":"List.List SE.UI.Table.Modifier -> SE.UI.Table.Head msg -> SE.UI.Table.Foot msg -> SE.UI.Table.Body msg -> Html.Styled.Html msg"}],"binops":[]},{"name":"SE.UI.Table.V2","comment":" Bulmas table element\nsee <https://bulma.io/documentation/elements/table/>\n\nThe second try on the Table component. This time we go with the with Star pattern that we use on Input and Card.\n\n@docs body, keyedBody, toHtml\n\n\n# With\\* pattern (pron. With start pattern)\n\nThe inspiration to this module and its API comes from Brian Hicks talk about Robot Buttons from Mars (<https://youtu.be/PDyWP-0H4Zo?t=1467>). (Please view the entire talk).\n\n    Example:\n\n    Table.body []\n        [ Html.tr []\n            [ Html.th [] [ Html.text \"This is a header cell.\" ]\n            , Html.td [] [ Html.text \"This is text in a cell.\" ]\n            , Html.td [] [ Html.text \"This is text in a cell.\" ]\n            ]\n        , Html.tr []\n            [ Html.td [] [ Html.text \"This is a header cell.\" ]\n            , Html.th [] [ Html.text \"This is text in a cell.\" ]\n            , Html.td [] [ Html.text \"This is text in a cell.\" ]\n            ]\n        ]\n        |> Table.withHead\n            [ Html.th [] [ Html.text \"This is a header cell.\" ]\n            , Html.th [] [ Html.text \"This is a header cell.\" ]\n            , Html.th [] [ Html.text \"This is a header cell.\" ]\n            ]\n        |> Table.withModifiers [ Table.Hoverable ]\n        |> Table.toHtml\n\n@docs withHead, withFoot, withModifiers, Modifier\n\n","unions":[{"name":"Modifier","comment":" The following modifiers from Bulma are always added:\n\nStriped, Bordered\n\n","args":[],"cases":[["Fullwidth",[]],["Hoverable",[]]]}],"aliases":[],"values":[{"name":"body","comment":" Create a table without thead or tfoot element, even though the functions name is body, the attributes will be added to the table tag. To style the tbody, use\n\n    Css.Global.children\n        [ Css.Global.typeSelector \"tbody\"\n            [-- Styles go here\n            ]\n        ]\n\n","type":"List.List (Html.Styled.Attribute msg) -> List.List (Html.Styled.Html msg) -> SE.UI.Table.V2.Table msg"},{"name":"keyedBody","comment":" Same as `body` but is [keyed](https://guide.elm-lang.org/optimization/keyed.html)\n","type":"List.List (Html.Styled.Attribute msg) -> List.List ( String.String, Html.Styled.Html msg ) -> SE.UI.Table.V2.Table msg"},{"name":"toHtml","comment":" Turn the table into Html\n","type":"SE.UI.Table.V2.Table msg -> Html.Styled.Html msg"},{"name":"withFoot","comment":" Add a tfoot tag to the end of the Table, the tfoots will also have a tr tag, your input should be a list of td tags.\n","type":"List.List (Html.Styled.Html msg) -> SE.UI.Table.V2.Table msg -> SE.UI.Table.V2.Table msg"},{"name":"withHead","comment":" Add a thead tag to the Table, the thead will also have a tr tag, your input should be a list of td tags.\n","type":"List.List (Html.Styled.Html msg) -> SE.UI.Table.V2.Table msg -> SE.UI.Table.V2.Table msg"},{"name":"withModifiers","comment":" Add Modifiers to the Table\n","type":"List.List SE.UI.Table.V2.Modifier -> SE.UI.Table.V2.Table msg -> SE.UI.Table.V2.Table msg"}],"binops":[]},{"name":"SE.UI.Tabs","comment":" DEPRECATED! Use SE.UI.Tabs.V2 instead.\n\nBulmas Tags component\nsee <https://bulma.io/documentation/components/tabs/>\n\n\n# Container\n\n@docs tabs\n\n\n# Links\n\n@docs link, Modifier\n\n","unions":[{"name":"Modifier","comment":" Only medium sized tabs are supported.\n","args":[],"cases":[["Medium",[]]]}],"aliases":[],"values":[{"name":"link","comment":" An active link is rendered as a blue link, non-active are rendered av dark text.\n\n    link False \"https://example.com/\" [ text \"Go to example.com\" ]\n\n","type":"SE.UI.Tabs.IsActive -> String.String -> List.List (Html.Styled.Html msg) -> SE.UI.Tabs.Link msg"},{"name":"tabs","comment":" Currently, only the Medium size modifier is supported, no boxed, fullwidth or anything else.\n","type":"List.List SE.UI.Tabs.Modifier -> List.List (SE.UI.Tabs.Link msg) -> Html.Styled.Html msg"}],"binops":[]},{"name":"SE.UI.Tabs.V2","comment":" Bulmas Tags component\nsee <https://bulma.io/documentation/components/tabs/>\n\n\n# Container\n\n@docs create, Tabs, toHtml\n\n\n# With\\* pattern (pron. With start pattern)\n\nThe inspiration to this module and its API comes from Brian Hicks talk about Robot Buttons from Mars (<https://youtu.be/PDyWP-0H4Zo?t=1467>). (Please view the entire talk).\n\n@docs isSmall, isMedium, isLarge, isToggled, isBoxed, isCentered, isRight, isFullwidth\n\n\n# Links or Buttons\n\nBulma only styles anchor tags as links, but sometimes we may want to trigger a msg instead of navigating to another page on click. An anchor tag without href attribute will trigger a reload in Elm. To overcome this, use `link` when you have a url and the `button` when you have a Msg.\n\n@docs link, button\n\n","unions":[{"name":"Tabs","comment":" This opaque type is only exposed to facilitate type annotations outside of the module\n","args":["msg"],"cases":[]}],"aliases":[],"values":[{"name":"button","comment":" Create a span tag with an onClick attribute, will trigger the provided message when clicked.\n\n    button False ShowSomething [ text \"Go to example.com\" ]\n\n","type":"SE.UI.Tabs.V2.IsActive -> msg -> List.List (Html.Styled.Html msg) -> SE.UI.Tabs.V2.LinkOrButton msg"},{"name":"create","comment":" Create tabs with all of Bulmas modifiers\n","type":"List.List (SE.UI.Tabs.V2.LinkOrButton msg) -> SE.UI.Tabs.V2.Tabs msg"},{"name":"isBoxed","comment":" Add .is-boxed to ul\n","type":"SE.UI.Tabs.V2.Tabs msg -> SE.UI.Tabs.V2.Tabs msg"},{"name":"isCentered","comment":" Add .is-centered to ul\n","type":"SE.UI.Tabs.V2.Tabs msg -> SE.UI.Tabs.V2.Tabs msg"},{"name":"isFullwidth","comment":" Add .is-fullwidth to ul\n","type":"SE.UI.Tabs.V2.Tabs msg -> SE.UI.Tabs.V2.Tabs msg"},{"name":"isLarge","comment":" Add .is-large to ul\n","type":"SE.UI.Tabs.V2.Tabs msg -> SE.UI.Tabs.V2.Tabs msg"},{"name":"isMedium","comment":" Add .is-medium to ul\n","type":"SE.UI.Tabs.V2.Tabs msg -> SE.UI.Tabs.V2.Tabs msg"},{"name":"isRight","comment":" Add .is-right to ul\n","type":"SE.UI.Tabs.V2.Tabs msg -> SE.UI.Tabs.V2.Tabs msg"},{"name":"isSmall","comment":" Add .is-small to ul\n","type":"SE.UI.Tabs.V2.Tabs msg -> SE.UI.Tabs.V2.Tabs msg"},{"name":"isToggled","comment":" Add .is-toggle to ul\n","type":"SE.UI.Tabs.V2.Tabs msg -> SE.UI.Tabs.V2.Tabs msg"},{"name":"link","comment":" Create a anchor tag with a href attribute, will reroute the visitor when clicked.\n\n    link False \"https://example.com/\" [ text \"Go to example.com\" ]\n\n","type":"SE.UI.Tabs.V2.IsActive -> String.String -> List.List (Html.Styled.Html msg) -> SE.UI.Tabs.V2.LinkOrButton msg"},{"name":"toHtml","comment":" Turn the Tabs type into Html\n","type":"SE.UI.Tabs.V2.Tabs msg -> Html.Styled.Html msg"}],"binops":[]},{"name":"SE.UI.Tag","comment":" Bulmas tag element\nsee <https://bulma.io/documentation/elements/tag/>\n\n\n# Tag\n\n@docs tag, deleteTag\n\n\n# Modifiers\n\n@docs TagModifier\n\n\n# Tags container\n\n@docs tags, TagsModifier\n\n","unions":[{"name":"TagModifier","comment":" Supported modifiers are colors (all colors are supported) and sizes\n","args":[],"cases":[["Color",["SE.UI.Colors.Color"]],["Normal",[]],["Medium",[]],["Large",[]]]},{"name":"TagsModifier","comment":" Tags can be attached using the Addons modifier\n","args":[],"cases":[["Addons",[]]]}],"aliases":[],"values":[{"name":"deleteTag","comment":" The delete modifier is supported using this function.\n","type":"msg -> Html.Styled.Html msg"},{"name":"tag","comment":" Colors and sizes is supported modifiers, `rounded` also, there is no way to attach a delete button to a tag, use `tags [Addons]` with a regular `tag` and `deleteTag`.\n","type":"List.List SE.UI.Tag.TagModifier -> String.String -> Html.Styled.Html msg"},{"name":"tags","comment":" List of tags\nsee <https://bulma.io/documentation/elements/tag/#list-of-tags>\n","type":"List.List SE.UI.Tag.TagsModifier -> List.List (Html.Styled.Html msg) -> Html.Styled.Html msg"}],"binops":[]},{"name":"SE.UI.Title","comment":" Bulma Title elements\nsee <https://bulma.io/documentation/elements/title/>\n\nOnly the title element is supported, not the subtitle\n\n@docs title1, title2, title3, title4, title5, title6\n\n","unions":[],"aliases":[],"values":[{"name":"title1","comment":" Title in size 1\n","type":"String.String -> Html.Styled.Html msg"},{"name":"title2","comment":" Title in size 2\n","type":"String.String -> Html.Styled.Html msg"},{"name":"title3","comment":" Title in size 3\n","type":"String.String -> Html.Styled.Html msg"},{"name":"title4","comment":" Title in size 4\n","type":"String.String -> Html.Styled.Html msg"},{"name":"title5","comment":" Title in size 5\n","type":"String.String -> Html.Styled.Html msg"},{"name":"title6","comment":" Title in size 6\n","type":"String.String -> Html.Styled.Html msg"}],"binops":[]},{"name":"SE.UI.Utils","comment":" Utility functions mostly used by the framework itself.\n\n\n# Media queries\n\n@docs mobile, tabletWidth, tablet, desktopWidth, desktop, widescreenWidth, widescreen, fullhdWidth, fullhd\n\n\n# Animation helpers\n\n@docs loader\n\n\n# Events\n\n@docs onChange\n\n\n# Helpers\n\n@docs block, centerEm, overflowTouch, unselectable, arrow, visuallyHidden\n\n\n# Constants\n\n@docs gap, radius, smallRadius\n\n","unions":[],"aliases":[],"values":[{"name":"arrow","comment":" Arrow used on select element and \"show more\" links.\n","type":"Css.Style"},{"name":"block","comment":" Block class used by .field, p etc\n","type":"Css.Style"},{"name":"centerEm","comment":" Center element\n","type":"Basics.Float -> Basics.Float -> Css.Style"},{"name":"desktop","comment":" Media query that maps to @media screen and (min-width: $desktop)\n","type":"List.List Css.Style -> Css.Style"},{"name":"desktopWidth","comment":" Threshold for desktops\n","type":"Basics.Float"},{"name":"fullhd","comment":" Media query that maps to @media screen and (min-width: $fullhd)\n","type":"List.List Css.Style -> Css.Style"},{"name":"fullhdWidth","comment":" Threshold for fullHDs\n","type":"Basics.Float"},{"name":"gap","comment":" Column gap in pixels\n","type":"Basics.Float"},{"name":"loader","comment":" Loading spinner animation\n","type":"Css.Style"},{"name":"mobile","comment":" Media query for mobile devices\n","type":"List.List Css.Style -> Css.Style"},{"name":"onChange","comment":" onChange event is used on select form elements\n","type":"(String.String -> msg) -> Html.Styled.Attribute msg"},{"name":"overflowTouch","comment":" Use momentum based scolling\nsee <https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-overflow-scrolling#Values>\n","type":"Css.Style"},{"name":"radius","comment":" Standard radius value\n","type":"Css.Px"},{"name":"smallRadius","comment":" Small radius value\n","type":"Css.Px"},{"name":"tablet","comment":" Media query that maps to @media screen and (min-width: $tablet)\nTODO add support for print to this since Bulma has it\n","type":"List.List Css.Style -> Css.Style"},{"name":"tabletWidth","comment":" Threshold for tablets\n","type":"Basics.Float"},{"name":"unselectable","comment":" Make an element unselectable\n","type":"Css.Style"},{"name":"visuallyHidden","comment":" Hides an element, visually. Works just like Html.Styled.styled\nSee <https://a11yproject.com/posts/how-to-hide-content/>\n","type":"(List.List (Html.Styled.Attribute a) -> List.List (Html.Styled.Html b) -> Html.Styled.Html msg) -> List.List (Html.Styled.Attribute a) -> List.List (Html.Styled.Html b) -> Html.Styled.Html msg"},{"name":"widescreen","comment":" Media query that maps to @media screen and (min-width: $widescreen)\n","type":"List.List Css.Style -> Css.Style"},{"name":"widescreenWidth","comment":" Threshold for widescreens\n","type":"Basics.Float"}],"binops":[]}]